<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-01-19T14:11:21-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Zhepei Wang’s Site</title><subtitle>Zhepei's homepage</subtitle><author><name>Zhepei Wang</name><email>zhepeiw03@gmail.com</email></author><entry><title type="html">Building the Site with TeXt and Jekyll Scholar</title><link href="http://localhost:4000/2018/12/23/blog1.html" rel="alternate" type="text/html" title="Building the Site with TeXt and Jekyll Scholar" /><published>2018-12-23T00:00:00-06:00</published><updated>2018-12-23T00:00:00-06:00</updated><id>http://localhost:4000/2018/12/23/blog1</id><content type="html" xml:base="http://localhost:4000/2018/12/23/blog1.html">&lt;p&gt;Welcome! This is the first blog of the site built with &lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot;&gt;GitHub Pages&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/&quot; target=&quot;_blank&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this article, I’d like to introduce the way I set up the site by adding a few features based on the &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/&quot; target=&quot;_blank&quot;&gt;TeXt&lt;/a&gt; theme. In particular, some of the add-on design and features are borrowed from &lt;a href=&quot;https://github.com/alshedivat/al-folio&quot; target=&quot;_blank&quot;&gt;al-folio&lt;/a&gt;, which is another great Jekyll theme for academics. The reason for choosing &lt;strong&gt;TeXt&lt;/strong&gt; instead of &lt;strong&gt;al-folio&lt;/strong&gt; to build on the site is the diversity of the styles and extensions (i.e., support for audio) provided.&lt;/p&gt;

&lt;p&gt;All the source code of the site is available on the &lt;a href=&quot;https://github.com/zhepeiw/zhepeiw.github.io/tree/source&quot; target=&quot;_blank&quot;&gt;source branch of my repo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;features&quot;&gt;Features&lt;/h1&gt;
&lt;h2 id=&quot;customized-home-page&quot;&gt;Customized Home Page&lt;/h2&gt;

&lt;p&gt;The default layout of the home or index page of the theme is the list of blog posts (as the layout under the current &lt;a href=&quot;/blog&quot;&gt;Blogs&lt;/a&gt; section). The layout of the home page is changed by modifying &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/home.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Personally, I’d like to display a short bio and a few updates (news) about my experience on the home page instead of a list of blogs. I replace the home layout to include a short bio and a list of news as two separate html files, &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/bio.html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/news.html&lt;/code&gt;, respectively. In particular, the html for the new listing, &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/news-list.html&lt;/code&gt; is similar to what we have in &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/article-list.html&lt;/code&gt;. We can add whatever content we want on the home page with similar approaches. In addition, I made a separate copy of the original home layout file to be the layout for the blog listing, &lt;code class=&quot;highlighter-rouge&quot;&gt;_layout/blog_home.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With such a setup, we now have a customized index page and a separate blog listing page.&lt;/p&gt;

&lt;h2 id=&quot;additional-social-options&quot;&gt;Additional Social Options&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TeXt&lt;/strong&gt; supports several contact options for social platforms including email, Facebook and LinkedIn. whose button appears on the footer of the page by default. We can incorporate additional options by editing the &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/author-links.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To include Google Scholar, we will need to use the icons from &lt;a href=&quot;https://jpswalsh.github.io/academicons/&quot; target=&quot;_blank&quot;&gt;Academicons&lt;/a&gt;. First, download the latest icon packages and put &lt;code class=&quot;highlighter-rouge&quot;&gt;academicons.css&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/css/&lt;/code&gt; and the rest under &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/fonts/&lt;/code&gt;. Then, add the following line to &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/css/main.scss&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;academicons.css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the following lines to &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/author-links.html&lt;/code&gt; under the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ul&amp;gt;...&amp;lt;/ul&amp;gt;&lt;/code&gt; block&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{-% if _author.scholar -%}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button button--circle scholar-button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;itemprop=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sameAs&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ai ai-google-scholar&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{-% endif -%}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, add the &lt;code class=&quot;highlighter-rouge&quot;&gt;scholar&lt;/code&gt; option under &lt;code class=&quot;highlighter-rouge&quot;&gt;author&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;bibliography&quot;&gt;Bibliography&lt;/h2&gt;

&lt;p&gt;Unfortunately, &lt;strong&gt;TeXt&lt;/strong&gt; does not come with automatic bibliography support. To enable such support, we incorporate &lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot; target=&quot;_blank&quot;&gt;Jekyll Scholar&lt;/a&gt; into the site.Jekyll Scholar is a Jekyll extension that converts bibtex to bibliography formatted according to the settings.&lt;/p&gt;

&lt;p&gt;To use Jekyll Scholar, we first add the following into the &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jekyll-scholar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;group: :jekyll_plugins&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, add the following into &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;scholar&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;last_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;YOUR_LAST_NAME&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;first_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;YOUR_FIRST_NAME&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apa&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;locale&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;en&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;sort_by&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;year&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;descending&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/_bibliography/&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bibliography&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;papers.bib&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;bibliography_template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bib&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;replace_strings&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;join_strings&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;details_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bibliography&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;details_layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bibtex.html&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;details_link&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Details&lt;/span&gt;

  &lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, add a layout html named &lt;code class=&quot;highlighter-rouge&quot;&gt;bib.html&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/&lt;/code&gt;. A sample could be found at the &lt;strong&gt;al-folio&lt;/strong&gt;’s site &lt;a href=&quot;https://github.com/alshedivat/al-folio/blob/master/_layouts/bib.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Meanwhile, add the corresponding stylesheet &lt;code class=&quot;highlighter-rouge&quot;&gt;_publications.scss&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;/_sass/common/components/&lt;/code&gt;. Then, add the following to &lt;code class=&quot;highlighter-rouge&quot;&gt;assets/css/main.scss&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@import &quot;common/components/publications&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, make a new directory &lt;code class=&quot;highlighter-rouge&quot;&gt;_bibliography/&lt;/code&gt; under the root directory, and put the bibtex file &lt;code class=&quot;highlighter-rouge&quot;&gt;papers.bib&lt;/code&gt; under the directory.&lt;/p&gt;

&lt;p&gt;In addition, it is possible to have the link for coauthors by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;coauthors.yml&lt;/code&gt; under &lt;code class=&quot;highlighter-rouge&quot;&gt;_data/&lt;/code&gt; adapted from &lt;a href=&quot;https://github.com/alshedivat/al-folio/blob/master/_data/coauthors.yml&quot; target=&quot;_blank&quot;&gt;the al-folio’s example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this site, I added a few supports for coauthors, equal contribution and additional comments to each entry. You may check out &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts/bib.html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/_sass/common/components/_publications.scss&lt;/code&gt; at &lt;a href=&quot;https://github.com/zhepeiw/zhepeiw.github.io/tree/source&quot; target=&quot;_blank&quot;&gt;my repo&lt;/a&gt; for details.&lt;/p&gt;

&lt;h1 id=&quot;site-deployment&quot;&gt;Site Deployment&lt;/h1&gt;
&lt;p&gt;Github Pages does not support Jekyll Scholar under the default workflow, but it is possible to host the site on Github Pages as introduced in &lt;a href=&quot;http://davidensinger.com/2013/07/automating-jekyll-deployment-to-github-pages-with-rake/&quot; target=&quot;_blank&quot;&gt;this example&lt;/a&gt;. In summary, we push the source files to a separate branch to remote and keep only the generated content of the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site/&lt;/code&gt; directories to the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;h2 id=&quot;preliminary-steps&quot;&gt;Preliminary Steps&lt;/h2&gt;
&lt;p&gt;If this is the &lt;strong&gt;first time&lt;/strong&gt; running the site, we should first create a &lt;a href=&quot;https://github.com/zhepeiw/zhepeiw.github.io/blob/source/Rakefile&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt;&lt;/a&gt; at the root of the repository. Then, we create and switch to a separate branch, (i.e., &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;) with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;automatic-deployment&quot;&gt;Automatic Deployment&lt;/h2&gt;
&lt;p&gt;We automize the deployment pipeline to Github Pages with the &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt; commands defined in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, we need to obtain the generated content by building the site locally with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure we stay on the &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; branch before running the following steps. You can check the status with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to commit the changes to the source branch locally and&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to push the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; directory to remote &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; and the source to remote &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can also combine the two steps into one by running&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rake commit_deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Given my limited understanding of Jekyll and front-end development, I admit that the site is still far from perfect, there are a few more possible features to include, and the notes and instructions above is not comprehensive and may contain mistakes. I’m still exploring ways to enhance the site, and I’m more than happy to receive suggestions and comments.&lt;/p&gt;</content><author><name>Zhepei Wang</name><email>zhepeiw03@gmail.com</email></author><category term="TeXt" /><category term="Jekyll" /><summary type="html">Welcome! This is the first blog of the site built with GitHub Pages and Jekyll. In this article, I’d like to introduce the way I set up the site by adding a few features based on the TeXt theme. In particular, some of the add-on design and features are borrowed from al-folio, which is another great Jekyll theme for academics. The reason for choosing TeXt instead of al-folio to build on the site is the diversity of the styles and extensions (i.e., support for audio) provided. All the source code of the site is available on the source branch of my repo. Features Customized Home Page The default layout of the home or index page of the theme is the list of blog posts (as the layout under the current Blogs section). The layout of the home page is changed by modifying _layouts/home.html. Personally, I’d like to display a short bio and a few updates (news) about my experience on the home page instead of a list of blogs. I replace the home layout to include a short bio and a list of news as two separate html files, _includes/bio.html and _includes/news.html, respectively. In particular, the html for the new listing, _includes/news-list.html is similar to what we have in _includes/article-list.html. We can add whatever content we want on the home page with similar approaches. In addition, I made a separate copy of the original home layout file to be the layout for the blog listing, _layout/blog_home.html. With such a setup, we now have a customized index page and a separate blog listing page. Additional Social Options TeXt supports several contact options for social platforms including email, Facebook and LinkedIn. whose button appears on the footer of the page by default. We can incorporate additional options by editing the _includes/author-links.html. To include Google Scholar, we will need to use the icons from Academicons. First, download the latest icon packages and put academicons.css under assets/css/ and the rest under assets/fonts/. Then, add the following line to assets/css/main.scss @import &quot;academicons.css&quot;; Add the following lines to _includes/author-links.html under the &amp;lt;ul&amp;gt;...&amp;lt;/ul&amp;gt; block {-% if _author.scholar -%} &amp;lt;li title=&quot;&quot;&amp;gt; &amp;lt;a class=&quot;button button--circle scholar-button&quot; itemprop=&quot;sameAs&quot; href=&quot;&quot; target=&quot;_blank&quot;&amp;gt; &amp;lt;i class=&quot;ai ai-google-scholar&quot;&amp;gt;&amp;lt;/i&amp;gt; &amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; {-% endif -%} Finally, add the scholar option under author in _config.yml. Bibliography Unfortunately, TeXt does not come with automatic bibliography support. To enable such support, we incorporate Jekyll Scholar into the site.Jekyll Scholar is a Jekyll extension that converts bibtex to bibliography formatted according to the settings. To use Jekyll Scholar, we first add the following into the Gemfile: gem 'jekyll-scholar', group: :jekyll_plugins Then, add the following into _config.yml scholar: last_name: YOUR_LAST_NAME first_name: YOUR_FIRST_NAME style: apa locale: en sort_by: year order: descending source: /_bibliography/ bibliography: papers.bib bibliography_template: bib replace_strings: true join_strings: true details_dir: bibliography details_layout: bibtex.html details_link: Details query: &quot;@*&quot; Next, add a layout html named bib.html under _layouts/. A sample could be found at the al-folio’s site here. Meanwhile, add the corresponding stylesheet _publications.scss to /_sass/common/components/. Then, add the following to assets/css/main.scss @import &quot;common/components/publications&quot;; Next, make a new directory _bibliography/ under the root directory, and put the bibtex file papers.bib under the directory. In addition, it is possible to have the link for coauthors by adding coauthors.yml under _data/ adapted from the al-folio’s example. For this site, I added a few supports for coauthors, equal contribution and additional comments to each entry. You may check out _config.yml, _layouts/bib.html and /_sass/common/components/_publications.scss at my repo for details. Site Deployment Github Pages does not support Jekyll Scholar under the default workflow, but it is possible to host the site on Github Pages as introduced in this example. In summary, we push the source files to a separate branch to remote and keep only the generated content of the _site/ directories to the master branch. Preliminary Steps If this is the first time running the site, we should first create a Rakefile at the root of the repository. Then, we create and switch to a separate branch, (i.e., source) with git checkout -b source Automatic Deployment We automize the deployment pipeline to Github Pages with the rake commands defined in the Rakefile. First, we need to obtain the generated content by building the site locally with bundle exec jekyll serve Make sure we stay on the source branch before running the following steps. You can check the status with git branch We can run rake commit to commit the changes to the source branch locally and rake deploy to push the _site directory to remote master and the source to remote source. We can also combine the two steps into one by running rake commit_deploy Given my limited understanding of Jekyll and front-end development, I admit that the site is still far from perfect, there are a few more possible features to include, and the notes and instructions above is not comprehensive and may contain mistakes. I’m still exploring ways to enhance the site, and I’m more than happy to receive suggestions and comments.</summary></entry></feed>